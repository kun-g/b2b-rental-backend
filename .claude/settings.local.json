{
  "permissions": {
    "allow": [
      "Bash(pnpm run:*)",
      "Bash(pnpm build:*)",
      "Bash(pnpm remove:*)",
      "Bash(ls:*)",
      "Bash(cat:*)",
      "Bash(docker search:*)",
      "WebSearch",
      "Bash(test:*)",
      "Bash(docker compose build:*)",
      "Bash(pnpm --filter=cms run build)",
      "Bash(xargs -I {} bash -c 'echo \"\"\"\"{}:\"\"\"\"; sed -n \"\"\"\"16p\"\"\"\" \"\"\"\"{}\"\"\"\"')",
      "Bash(SKIP_TYPE_CHECK=true pnpm --filter=cms run build:*)",
      "Bash(git add:*)",
      "Bash(git commit -m \"$(cat <<''EOF''\nfix: 修复 TypeScript 类型错误和 ESLint 警告\n\n- 修复 UseInvitationForm User 接口定义，支持 Payload CMS 返回类型\n- 修复邀请码端点中的空值检查和类型转换\n- 修复未使用变量的 ESLint 警告（使用 _ 前缀）\n- 移除未使用的类型导入\n- 优化类型安全性，使用 unknown 替代 any\n\n🤖 Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(git commit -m \"$(cat <<''EOF''\nfix: 修复 Dockerfile 中 public 目录不存在导致的构建失败\n\n在 builder 阶段创建 public 目录，确保 COPY 操作不会因目录不存在而失败。\nNext.js 的 public 目录是可选的，此修复使 Dockerfile 更加健壮。\n\n🤖 Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(git commit:*)",
      "WebFetch(domain:payloadcms.com)",
      "Bash(tee:*)",
      "WebFetch(domain:github.com)",
      "Bash(PORT=3001 NODE_ENV=production timeout 10 node server.js)",
      "Bash(export PORT=3001)",
      "Bash(export NODE_ENV=production)",
      "Bash(timeout 10 node:*)",
      "Bash(docker compose:*)",
      "Bash(docker logs:*)",
      "Bash(docker inspect:*)",
      "Bash(docker exec:*)",
      "Bash(python3:*)",
      "Bash(docker restart:*)",
      "Bash(docker ps:*)",
      "Bash(curl:*)",
      "Bash(docker network:*)",
      "Bash(xargs docker inspect:*)",
      "Bash(PGPASSWORD=goodpassword psql:*)",
      "Bash(DATABASE_URI=\"postgresql://postgres:goodpassword@23.249.26.170:34822/cms\" NODE_ENV=development pnpm seed)",
      "Bash(DATABASE_URI=\"postgresql://postgres:goodpassword@23.249.26.170:34822/cms?sslmode=disable\" NODE_ENV=development pnpm seed)",
      "Bash(docker port:*)",
      "Bash(nc:*)",
      "Bash(ip route:*)",
      "Bash(pnpm add:*)",
      "Bash(pnpm generate:types:*)",
      "Bash(rm:*)",
      "Bash(pnpm lint)",
      "Bash(pnpm seed:*)",
      "Bash(psql:*)",
      "Bash(pnpm exec tsx:*)",
      "Bash(PGPASSWORD=password psql:*)",
      "Read(//private/tmp/**)",
      "Bash(timeout 240 pnpm seed --clean)",
      "Bash(ssh:*)",
      "Bash(git push:*)",
      "Bash(podman exec:*)",
      "Bash(DATABASE_URI=\"postgresql://dev:password@localhost:5432/rental?schema=public\" PAYLOAD_SECRET=5a7ff1d3b3da0977ad05e12e9f40509095c9a1e99b1821bbd9ab4b519cc48c5b pnpm exec tsx verify-multi-users.ts)",
      "Bash(pnpm test:*)",
      "Bash(pnpm test:int:*)",
      "Bash(pnpm exec playwright:*)",
      "Read(//Users/guokun/.claude/**)"
    ],
    "deny": [],
    "ask": []
  }
}

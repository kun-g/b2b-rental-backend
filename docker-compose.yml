services:
  db-workstation:
    build:
      context: .
      dockerfile: Dockerfile
      target: seeder
    container_name: cms-db-workstation
    working_dir: /app
    environment:
      DATABASE_URI: ${DATABASE_URI:-postgresql://postgress:hHvjxC24@rent-database-gvfzwv:5432/cms}
      NODE_ENV: development
      PAYLOAD_SECRET: ${PAYLOAD_SECRET}
    networks:
      - dokploy-network
    restart: unless-stopped  # 保持运行

  cms:
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    environment:
      DATABASE_URI: ${DATABASE_URI}
      PAYLOAD_SECRET: ${PAYLOAD_SECRET:-dev-payload-secret-change-in-production}
      DATABASE_PUSH: ${DATABASE_PUSH:-false}
      NODE_ENV: ${environment:-production}
      NEXT_TELEMETRY_DISABLED: 1
      CORS_ALLOWED_ORIGINS: ${CORS_ALLOWED_ORIGINS}∑
    ports:
      - '${CMS_PORT:-3000}'
    networks:
      - rent-backend-network
      - dokploy-network
    healthcheck:
      test: ['CMD-SHELL', 'wget --no-verbose --tries=1 --spider http://localhost:3000/api/health || exit 1']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

networks:
  rent-backend-network:
    driver: bridge
  dokploy-network:
    external: true
